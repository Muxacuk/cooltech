/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$fb-hover-name: 'fb-hover';
$fb-hover-x: 72px;
$fb-hover-y: 0px;
$fb-hover-offset-x: -72px;
$fb-hover-offset-y: 0px;
$fb-hover-width: 6px;
$fb-hover-height: 12px;
$fb-hover-total-width: 78px;
$fb-hover-total-height: 44px;
$fb-hover-image: '../pictures/spritesocials.png';
$fb-hover: (72px, 0px, -72px, 0px, 6px, 12px, 78px, 44px, '../pictures/spritesocials.png', 'fb-hover', );
$fb-name: 'fb';
$fb-x: 72px;
$fb-y: 32px;
$fb-offset-x: -72px;
$fb-offset-y: -32px;
$fb-width: 6px;
$fb-height: 12px;
$fb-total-width: 78px;
$fb-total-height: 44px;
$fb-image: '../pictures/spritesocials.png';
$fb: (72px, 32px, -72px, -32px, 6px, 12px, 78px, 44px, '../pictures/spritesocials.png', 'fb', );
$tw-hover-name: 'tw-hover';
$tw-hover-x: 0px;
$tw-hover-y: 0px;
$tw-hover-offset-x: 0px;
$tw-hover-offset-y: 0px;
$tw-hover-width: 16px;
$tw-hover-height: 12px;
$tw-hover-total-width: 78px;
$tw-hover-total-height: 44px;
$tw-hover-image: '../pictures/spritesocials.png';
$tw-hover: (0px, 0px, 0px, 0px, 16px, 12px, 78px, 44px, '../pictures/spritesocials.png', 'tw-hover', );
$tw-name: 'tw';
$tw-x: 36px;
$tw-y: 0px;
$tw-offset-x: -36px;
$tw-offset-y: 0px;
$tw-width: 16px;
$tw-height: 12px;
$tw-total-width: 78px;
$tw-total-height: 44px;
$tw-image: '../pictures/spritesocials.png';
$tw: (36px, 0px, -36px, 0px, 16px, 12px, 78px, 44px, '../pictures/spritesocials.png', 'tw', );
$vk-hover-name: 'vk-hover';
$vk-hover-x: 0px;
$vk-hover-y: 32px;
$vk-hover-offset-x: 0px;
$vk-hover-offset-y: -32px;
$vk-hover-width: 10px;
$vk-hover-height: 12px;
$vk-hover-total-width: 78px;
$vk-hover-total-height: 44px;
$vk-hover-image: '../pictures/spritesocials.png';
$vk-hover: (0px, 32px, 0px, -32px, 10px, 12px, 78px, 44px, '../pictures/spritesocials.png', 'vk-hover', );
$vk-name: 'vk';
$vk-x: 30px;
$vk-y: 32px;
$vk-offset-x: -30px;
$vk-offset-y: -32px;
$vk-width: 10px;
$vk-height: 12px;
$vk-total-width: 78px;
$vk-total-height: 44px;
$vk-image: '../pictures/spritesocials.png';
$vk: (30px, 32px, -30px, -32px, 10px, 12px, 78px, 44px, '../pictures/spritesocials.png', 'vk', );
$spritesheet-width: 78px;
$spritesheet-height: 44px;
$spritesheet-image: '../pictures/spritesocials.png';
$spritesheet-sprites: ($fb-hover, $fb, $tw-hover, $tw, $vk-hover, $vk, );
$spritesheet: (78px, 44px, '../pictures/spritesocials.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
